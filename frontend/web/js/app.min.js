JQueryPlugin=function(t,e){if(void 0===this.pluginName||null===this.pluginName||""===this.pluginName)throw new Error('Static attribute "pluginName" must be set');this.destroyElementData(t),this.$element=t,this.options=$.extend({},this.defaultOptions(),e),this.init(),this.setElementData(t)},JQueryPlugin.prototype.destroyElementData=function(t){var e=t.data(this.pluginName);null!=e&&e.destroy()},JQueryPlugin.prototype.setElementData=function(t){t.data(this.pluginName,this)},JQueryPlugin.prototype.init=function(t){},JQueryPlugin.prototype.destroy=function(){this.$element.data(this.name,null)},JQueryPlugin.prototype.defaultOptions=function(){return{}},JQueryPlugin.addToJQuery=function(t,i){void 0!==$.fn[t]&&null!==$.fn[t]||($.fn[t]=function(e){if("object"==typeof(e=e||{}))return this.each(function(){var t=$.extend(!0,{},e);new i($(this),t)}),this;throw new Error("Invalid arguments for JQueryPlugin: "+e)})},ListEdit=function(t,e){JQueryPlugin.apply(this,arguments)},ListEdit.prototype=$.extend(Object.create(JQueryPlugin.prototype),{constructor:ListEdit,pluginName:"listEdit",init:function(){JQueryPlugin.prototype.init.apply(this,arguments);var e=this;this.$itemsContainer=this.$element.find(this.options.itemsContainerSelector),this.$templateItem=this.$element.find(this.options.templateItemSelector),this.$actionsContainer=this.$element.find(this.options.actionsContainerSelector),this._itemNextIndex=this.$element.find(this.options.itemSelector).length,this.initItems(),this.registerEvents(),this.options.actions.forEach(function(t){t.attachTo(e)}),this.options.itemActions.forEach(function(t){t.attachTo(e)})},defaultOptions:function(){return{itemsContainerSelector:".list-edit__items",templateItemSelector:".list-edit__item--template",itemSelector:".list-edit__item",itemCssClass:"list-edit__item",actionsContainerSelector:".list-edit__actions",actions:[],itemActions:[],itemPluginName:"listEditItem",itemPluginOptions:{}}},initItems:function(){var i=this;this.$element.find(this.options.itemSelector).each(function(t,e){i.initItem($(e),t),i.getItemPlugin($(e)).setPosition(t+1)})},initItem:function(t,e){t[this.options.itemPluginName](this.options.itemPluginOptions),this.getItemPlugin(t).attachTo(this,e)},getItemNextIndex:function(){var t=this._itemNextIndex;return this._itemNextIndex++,t},registerEvents:function(){},getNewItem:function(){var t=this.getItemNextIndex(),e=this.$templateItem.clone();return e.removeClass().addClass(this.options.itemCssClass),this.initItem(e,t),this.getItemPlugin(e).prepareNewItem(t),e},appendItem:function(t){var e=this.$element.find(this.options.itemSelector).length+1;this.getItemPlugin(t).setPosition(e),this.$itemsContainer.append(t)},deleteItem:function(t){t.remove(),this.updateItemsPosition()},updateItemsPosition:function(){var i=this;this.$element.find(this.options.itemSelector).each(function(t,e){i.getItemPlugin($(e)).setPosition(t+1)})},getItemPlugin:function(t){return t.data(this.options.itemPluginName)},getOptionsClone:function(){var t=$.extend({},this.options);return t.itemPluginOptions=$.extend({},t.itemPluginOptions),t.actions=t.actions.map(function(t){var e=t.options;return new t.constructor(e)}),t.itemActions=t.itemActions.map(function(t){var e=t.options;return new t.constructor(e)}),t}}),JQueryPlugin.addToJQuery(ListEdit.prototype.pluginName,ListEdit),ListEditExtension=function(t){this.options=$.extend({},this.defaultOptions(),t)},ListEditExtension.prototype.defaultOptions=function(){return{}},ListEditExtension.prototype.attachTo=function(t){this.listEdit=t,this.registerEvents()},ListEditExtension.prototype.registerEvents=function(){},ListEditActionCreate=function(t){ListEditExtension.apply(this,arguments)},ListEditActionCreate.prototype=$.extend(Object.create(ListEditExtension.prototype),{constructor:ListEditActionCreate,defaultOptions:function(){return{selector:""}},registerEvents:function(){var e=this;this.listEdit.$actionsContainer.find(this.options.selector).on("click",function(t){return t.preventDefault(),e.createNewItem(),!1})},createNewItem:function(){var t=this.listEdit.getNewItem();this.listEdit.appendItem(t)}}),ListEditActionDelete=function(t){ListEditExtension.apply(this,arguments)},ListEditActionDelete.prototype=$.extend(Object.create(ListEditExtension.prototype),{constructor:ListEditActionDelete,defaultOptions:function(){return{selector:""}},registerEvents:function(){var e=this;this.listEdit.$itemsContainer.on("click",this.options.selector,function(t){return t.preventDefault(),e.deleteItem($(this).closest(e.listEdit.options.itemSelector)),!1})},deleteItem:function(t){this.listEdit.deleteItem(t)}}),ListEditActionMove=function(t){ListEditExtension.apply(this,arguments)},ListEditActionMove.prototype=$.extend(Object.create(ListEditExtension.prototype),{constructor:ListEditActionMove,defaultOptions:function(){return{selector:""}},registerEvents:function(){var n=this;this.listEdit.$itemsContainer.sortable({handle:this.options.selector,axis:"y",cursor:"move",containment:"parent"}),this.listEdit.$itemsContainer.on("sortupdate",function(t,e){n.listEdit.$element.find(n.listEdit.options.itemSelector).not(".ui-sortable-placeholder").each(function(t,e){var i=n.listEdit.getItemPlugin($(e));i&&i.setPosition(t+1)})}),this.listEdit.$itemsContainer.on("click",this.options.selector,function(t){return t.preventDefault(),!1})}}),ListEditItem=function(t,e){JQueryPlugin.apply(this,arguments)},ListEditItem.prototype=$.extend(Object.create(JQueryPlugin.prototype),{constructor:ListEditItem,pluginName:"listEditItem",init:function(){JQueryPlugin.prototype.init.apply(this,arguments),this.initProperties()},initProperties:function(){this.uniqueIndex=null,this.position=null},initPlugins:function(){this.$element.find("select").each(function(t,e){var i=$(e),n=i.attr("data-s2-options"),o=i.attr("data-krajee-select2"),s=i.attr("id");n&&!i.data("select2")&&$.when(i.select2(window[o])).done(initS2Loading(s,n))})},attachTo:function(t,e){this.listEdit=t,this.uniqueIndex=e,this.registerEvents()},setPosition:function(t){this.position=t},prepareNewItem:function(){var t=this.$element,r=this.uniqueIndex;t.find(".select2.select2-container").remove(),t.find("input, textarea, select").each(function(t,e){var i=$(e),n=i.attr("name"),o=i.attr("id"),s=i.attr("data-select2-id");n=n.replace("[-1]","["+r+"]"),i.attr("name",n),o&&(o=o.replace("--1-","-"+r+"-"),i.attr("id",o)),s&&(s=s.replace("--1-","-"+r+"-"),i.attr("data-select2-id",s))}),t.find("label").each(function(t,e){var i=$(e).attr("for");i&&(i=i.replace("--1-","-"+r+"-"),$(e).attr("for",i))}),this.initPlugins()},registerEvents:function(){},getEventNamespace:function(){return"listItem"+this.uniqueIndex}}),JQueryPlugin.addToJQuery(ListEditItem.prototype.pluginName,ListEditItem),CalculateOsagoFormPeopleListEditItem=function(t,e){JQueryPlugin.apply(this,arguments)},CalculateOsagoFormPeopleListEditItem.prototype=$.extend(Object.create(ListEditItem.prototype),{constructor:CalculateOsagoFormPeopleListEditItem,pluginName:"calculateOsagoFormPeopleListEditItem",initProperties:function(){ListEditItem.prototype.initProperties.apply(this,arguments),this.$label=this.$element.find(".list-edit__item-label")},prepareNewItem:function(){ListEditItem.prototype.prepareNewItem.apply(this,arguments),$.fn.kvDatepicker.defaults.format="dd.mm.yyyy",$.fn.kvDatepicker.defaults.language="ru";var t=this.$element,s=this.uniqueIndex;t.find('[id *= "CalculateOsagoForm-people--1-"]').each(function(t,e){var i=$(e),n=i.attr("id"),o=i.find("input");n=n.replace("--1-","-"+s+"-"),i.attr("id",n.replace("--1-","-"+s+"-")),o.attr("data-datepicker-source",o.attr("data-datepicker-source").replace("--1-","-"+s+"-")),i.kvDatepicker()})},setPosition:function(t){ListEditItem.prototype.setPosition.apply(this,arguments),this.$label.text("Водитель #"+t)}}),JQueryPlugin.addToJQuery(CalculateOsagoFormPeopleListEditItem.prototype.pluginName,CalculateOsagoFormPeopleListEditItem),CalculateOsagoFormPeopleListEditActionDelete=function(t){ListEditExtension.apply(this,arguments)},CalculateOsagoFormPeopleListEditActionDelete.prototype=$.extend(Object.create(ListEditExtension.prototype),{constructor:CalculateOsagoFormPeopleListEditActionDelete,defaultOptions:function(){return{selector:""}},registerEvents:function(){var e=this;this.listEdit.$itemsContainer.on("click",this.options.selector,function(t){return t.preventDefault(),1<$(".list-edit__item").length&&e.deleteItem($(this).closest(e.listEdit.options.itemSelector)),!1})},deleteItem:function(t){this.listEdit.deleteItem(t)}});var allowSubmit,$form=$("#calculate-osago-form");$form.on("beforeValidate",function(){var t=$(".calculateosagoform-people-list-edit .list-edit__item");t.each(function(t,e){var i=$(e),n=i.find(".calculateosagoform-people-date_birth-input"),o=i.find(".calculateosagoform-driver_license_series-input"),s=i.find(".calculateosagoform-driver_license_number-input"),r=i.find(".calculateosagoform-date_begin_experience-input");n.val()?n.parent().parent().removeClass("has-error").find(".help-block").text(""):n.parent().parent().addClass("has-error").find(".help-block").text('Необходимо заполнить "Дата рождения"'),o.val()?o.parent().removeClass("has-error").find(".help-block").text(""):o.parent().addClass("has-error").find(".help-block").text('Необходимо заполнить "Серия водительского удостоверения"'),s.val()?s.parent().removeClass("has-error").find(".help-block").text(""):s.parent().addClass("has-error").find(".help-block").text('Необходимо заполнить "Номер водительского удостоверения"'),r.val()?r.parent().parent().removeClass("has-error").find(".help-block").text(""):r.parent().parent().addClass("has-error").find(".help-block").text('Необходимо заполнить "Дата начала стажа"')}),allowSubmit=!t.find(".has-error").length}),$form.on("beforeSubmit",function(){return allowSubmit});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
